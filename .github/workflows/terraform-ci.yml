name: 'Terraform CI'

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  terraform-ci:
    name: 'Terraform CI'
    runs-on: ubuntu-latest

    steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.0

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v3
      with:
        tflint_version: v0.44.1

    - name: Install Terrascan
      run: |
        curl -L "$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E "https://.+?_Linux_x86_64.tar.gz")" > terrascan.tar.gz
        tar -xf terrascan.tar.gz terrascan && rm terrascan.tar.gz
        sudo install terrascan /usr/local/bin && rm terrascan

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: TFLint
      run: |
        tflint --init
        tflint --recursive

    - name: Terraform Init
      run: |
        for dir in $(find . -type f -name "*.tf" -exec dirname {} \; | sort -u); do
          echo "Initializing $dir"
          cd $dir
          terraform init -backend=false
          cd -
        done

    - name: Terraform Validate
      run: |
        for dir in $(find . -type f -name "*.tf" -exec dirname {} \; | sort -u); do
          echo "Validating $dir"
          cd $dir
          terraform validate
          cd -
        done
        
    - name: Run Terrascan
      run: |
        ls -la
        pwd
        terrascan scan -i terraform -d $(pwd)

    - name: Generate Terraform Docs
      uses: terraform-docs/gh-actions@v1.0.0
      with:
        working-dir: |
          modules/kubernetes/regional
          modules/kubernetes/zonal
          modules/storage/s3
        output-file: README.md
        output-method: inject
        git-push: true
